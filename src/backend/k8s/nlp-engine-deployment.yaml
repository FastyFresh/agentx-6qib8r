apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlp-engine
  namespace: agent-platform
  labels:
    app: nlp-engine
    component: core
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nlp-engine
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: nlp-engine
        component: core
    spec:
      serviceAccountName: nlp-engine-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: nlp-engine
        image: nlp-engine:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: PORT
          value: "8000"
        - name: PYTHONPATH
          value: "/app/src"
        - name: MODEL_PATH
          valueFrom:
            configMapKeyRef:
              name: nlp-engine-config
              key: MODEL_PATH
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: nlp-engine-config
              key: LOG_LEVEL
        - name: MODEL_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: nlp-engine-secrets
              key: MODEL_ENCRYPTION_KEY
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: models
          mountPath: /app/models
          readOnly: true
        - name: cache
          mountPath: /app/cache
          readOnly: false
        - name: tmp
          mountPath: /tmp
          readOnly: false
      volumes:
      - name: models
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: nlp-engine
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nlp-engine
  namespace: agent-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nlp-engine
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nlp-engine-pdb
  namespace: agent-platform
spec:
  minAvailable: 50%
  selector:
    matchLabels:
      app: nlp-engine