apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: agent-platform
  labels:
    app: redis
    component: cache
    part-of: agent-platform
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
spec:
  serviceName: redis
  replicas: 3
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - redis
              topologyKey: kubernetes.io/hostname
      initContainers:
        - name: init-redis
          image: busybox:1.36
          command:
            - sh
            - -c
            - chmod 0644 /etc/redis/redis.conf
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
      containers:
        - name: redis
          image: redis:7.0-alpine
          command:
            - redis-server
            - /etc/redis/redis.conf
          ports:
            - containerPort: 6379
              name: redis
            - containerPort: 16379
              name: cluster
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis
            - name: redis-tls
              mountPath: /etc/redis/tls
              readOnly: true
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: redis.password
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.45.0
          ports:
            - containerPort: 9121
              name: metrics
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "100m"
              memory: "128Mi"
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-tls
          secret:
            secretName: redis-credentials
            items:
              - key: redis.tls.cert
                path: tls.crt
              - key: redis.tls.key
                path: tls.key
  volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard