{{/* Generate secrets for AGENT AI Platform with enhanced security */}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "agent-platform.fullname" . }}-credentials
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "agent-platform.labels" . | nindent 4 }}
  annotations:
    # AWS KMS encryption configuration
    kms.aws.com/key: {{ .Values.global.security.encryption.provider | eq "aws-kms" | ternary .Values.global.security.encryption.keyId "" | quote }}
    # Automatic key rotation schedule
    kms.aws.com/rotation-schedule: {{ .Values.global.security.encryption.keyRotationInterval | default 90 | quote }}
    # Enhanced audit logging
    audit.kubernetes.io/mode: "enforced"
    audit.kubernetes.io/retention: "30d"
    # Multi-region replication status
    replication.agent.ai/enabled: {{ .Values.global.multiRegion.enabled | quote }}
    replication.agent.ai/regions: {{ .Values.global.multiRegion.regions | toJson | quote }}
type: Opaque
data:
  # Database credentials with enhanced encryption
  {{- if .Values.dependencies.postgresql.enabled }}
  POSTGRES_USER: {{ .Values.dependencies.postgresql.auth.username | b64enc | quote }}
  POSTGRES_PASSWORD: {{ randAlphaNum 32 | b64enc | quote }}
  POSTGRES_DATABASE: {{ .Values.dependencies.postgresql.auth.database | b64enc | quote }}
  {{- end }}

  # Redis credentials with enhanced encryption
  {{- if .Values.dependencies.redis.enabled }}
  REDIS_PASSWORD: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}

  # Auth0 credentials for authentication
  {{- if eq .Values.global.security.auth.provider "auth0" }}
  AUTH0_CLIENT_ID: {{ required "Auth0 client ID is required" .Values.global.security.auth.clientId | b64enc | quote }}
  AUTH0_CLIENT_SECRET: {{ required "Auth0 client secret is required" .Values.global.security.auth.clientSecret | b64enc | quote }}
  AUTH0_DOMAIN: {{ required "Auth0 domain is required" .Values.global.security.auth.domain | b64enc | quote }}
  {{- end }}

  # JWT signing keys with automatic rotation
  JWT_PRIVATE_KEY: {{ randAlphaNum 64 | b64enc | quote }}
  JWT_PUBLIC_KEY: {{ randAlphaNum 64 | b64enc | quote }}

  # API encryption keys
  API_ENCRYPTION_KEY: {{ randAlphaNum 32 | b64enc | quote }}

  # Service-specific secrets
  {{- if .Values.services.nlp-engine.enabled }}
  NLP_API_KEY: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}

---
# Regional secrets for multi-region deployment
{{- if .Values.global.multiRegion.enabled }}
{{- range .Values.global.multiRegion.regions }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "agent-platform.fullname" $ }}-credentials-{{ . }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "agent-platform.labels" $ | nindent 4 }}
    region: {{ . }}
  annotations:
    kms.aws.com/key: {{ $.Values.global.security.encryption.provider | eq "aws-kms" | ternary $.Values.global.security.encryption.keyId "" | quote }}
    kms.aws.com/rotation-schedule: {{ $.Values.global.security.encryption.keyRotationInterval | default 90 | quote }}
    audit.kubernetes.io/mode: "enforced"
    audit.kubernetes.io/retention: "30d"
    replication.agent.ai/source-region: {{ index $.Values.global.multiRegion.regions 0 }}
type: Opaque
data:
  # Region-specific database credentials
  {{- if $.Values.dependencies.postgresql.enabled }}
  POSTGRES_USER: {{ $.Values.dependencies.postgresql.auth.username | b64enc | quote }}
  POSTGRES_PASSWORD: {{ randAlphaNum 32 | b64enc | quote }}
  POSTGRES_DATABASE: {{ $.Values.dependencies.postgresql.auth.database | b64enc | quote }}
  {{- end }}

  # Region-specific Redis credentials
  {{- if $.Values.dependencies.redis.enabled }}
  REDIS_PASSWORD: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}

  # Region-specific encryption keys
  REGION_ENCRYPTION_KEY: {{ randAlphaNum 32 | b64enc | quote }}
---
{{- end }}
{{- end }}